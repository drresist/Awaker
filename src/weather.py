import requests
from datetime import datetime
import time
import locale

from src.utils import config_logger

log = config_logger()


def fetch_weather_data(city):
    """Fetch weather data from wttr.in API."""
    url = f"https://wttr.in/{city}?format=%c+%C+%t&lang=ru"
    response = requests.get(url, timeout=5)
    response.raise_for_status()
    return response.text.strip()


def process_weather_data(data, city):
    """Process the weather data and create a simplified formatted message in Russian."""
    weather_info = data.split(" ")
    current_emoji = weather_info[0]
    current_desc = " ".join(weather_info[1:-1])
    current_temp = weather_info[-1]

    locale.setlocale(locale.LC_TIME, "ru_RU.UTF-8")
    message = f"üåç –ü–æ–≥–æ–¥–∞ –≤ {city} - {datetime.now().strftime('%d %B %Y')}\n"
    message += f"{current_emoji} {current_desc.capitalize()}\n"
    message += f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {current_temp}"

    return message.strip()


def get_today_weather(city, max_retries=3, retry_delay=5):
    """Retrieve current weather with retry logic."""
    for attempt in range(max_retries):
        try:
            data = fetch_weather_data(city)
            return process_weather_data(data, city)
        except requests.exceptions.RequestException as e:
            if attempt < max_retries - 1:
                print(
                    f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ {retry_delay} —Å–µ–∫—É–Ω–¥..."
                )
                time.sleep(retry_delay)
            else:
                return f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –ø–æ—Å–ª–µ {max_retries} –ø–æ–ø—ã—Ç–æ–∫: {e}"
        except (IndexError, ValueError) as e:
            return f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ: {e}"
